hard = {"5" => {"2" => "H", "3" => "H", "4" => "H", "5" => "H", "6" => "H", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"},
        "6" => {"2" => "H", "3" => "H", "4" => "H", "5" => "H", "6" => "H", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"},
        "7" => {"2" => "H", "3" => "H", "4" => "H", "5" => "H", "6" => "H", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"},
        "8" => {"2" => "H", "3" => "H", "4" => "Dh", "5" => "Dh", "6" => "H", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"},
        "9" => {"2" => "Dh", "3" => "Dh", "4" => "Dh", "5" => "Dh", "6" => "H", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"},
        "10" => {"2" => "Dh", "3" => "Dh", "4" => "Dh", "5" => "Dh", "6" => "Dh", "7" => "Dh", "8" => "Dh", "9" => "Dh", "10" => "H", "A" => "H"},
        "11" => {"2" => "Dh", "3" => "Dh", "4" => "Dh", "5" => "Dh", "6" => "Dh", "7" => "Dh", "8" => "Dh", "9" => "Dh", "10" => "Dh", "A" => "Dh"},
        "12" => {"2" => "H", "3" => "H", "4" => "S", "5" => "S", "6" => "S", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"},
        "13" => {"2" => "S", "3" => "S", "4" => "S", "5" => "S", "6" => "S", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"},
        "14" => {"2" => "S", "3" => "S", "4" => "S", "5" => "S", "6" => "S", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"},
        "15" => {"2" => "S", "3" => "S", "4" => "S", "5" => "S", "6" => "S", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"},
        "16" => {"2" => "S", "3" => "S", "4" => "S", "5" => "S", "6" => "S", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"},
        "17" => {"2" => "S", "3" => "S", "4" => "S", "5" => "S", "6" => "S", "7" => "S", "8" => "S", "9" => "S", "10" => "S", "A" => "S"},
        "18" => {"2" => "S", "3" => "S", "4" => "S", "5" => "S", "6" => "S", "7" => "S", "8" => "S", "9" => "S", "10" => "S", "A" => "S"},
        "19" => {"2" => "S", "3" => "S", "4" => "S", "5" => "S", "6" => "S", "7" => "S", "8" => "S", "9" => "S", "10" => "S", "A" => "S"},
        "20" => {"2" => "S", "3" => "S", "4" => "S", "5" => "S", "6" => "S", "7" => "S", "8" => "S", "9" => "S", "10" => "S", "A" => "S"},
        "21" => {"2" => "S", "3" => "S", "4" => "S", "5" => "S", "6" => "S", "7" => "S", "8" => "S", "9" => "S", "10" => "S", "A" => "S"}}

soft = {"13" => {"2" => "H", "3" => "H", "4" => "Dh", "5" => "Dh", "6" => "Dh", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"},
        "14" => {"2" => "H", "3" => "H", "4" => "Dh", "5" => "Dh", "6" => "Dh", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"},
        "15" => {"2" => "H", "3" => "H", "4" => "Dh", "5" => "Dh", "6" => "Dh", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"},
        "16" => {"2" => "H", "3" => "H", "4" => "Dh", "5" => "Dh", "6" => "Dh", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"},
        "17" => {"2" => "Dh", "3" => "Dh", "4" => "Dh", "5" => "Dh", "6" => "Dh", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"},
        "18" => {"2" => "S", "3" => "Ds", "4" => "Ds", "5" => "Ds", "6" => "Ds", "7" => "S", "8" => "S", "9" => "H", "10" => "H", "A" => "S"},
        "19" => {"2" => "S", "3" => "S", "4" => "S", "5" => "S", "6" => "Ds", "7" => "S", "8" => "S", "9" => "S", "10" => "S", "A" => "S"},
        "20" => {"2" => "S", "3" => "S", "4" => "S", "5" => "S", "6" => "S", "7" => "S", "8" => "S", "9" => "S", "10" => "S", "A" => "S"},
        "21" => {"2" => "S", "3" => "S", "4" => "S", "5" => "S", "6" => "S", "7" => "S", "8" => "S", "9" => "S", "10" => "S", "A" => "S"}}

pair = {"2" => {"2" => "H", "3" => "H", "4" => "H", "5" => "H", "6" => "H", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"},
        "3" => {"2" => "H", "3" => "H", "4" => "H", "5" => "H", "6" => "H", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"},
        "4" => {"2" => "H", "3" => "H", "4" => "H", "5" => "H", "6" => "H", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"},
        "5" => {"2" => "H", "3" => "H", "4" => "Dh", "5" => "Dh", "6" => "H", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"},
        "6" => {"2" => "Dh", "3" => "Dh", "4" => "Dh", "5" => "Dh", "6" => "H", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"},
        "7" => {"2" => "Dh", "3" => "Dh", "4" => "Dh", "5" => "Dh", "6" => "Dh", "7" => "Dh", "8" => "Dh", "9" => "Dh", "10" => "H", "A" => "H"},
        "8" => {"2" => "Dh", "3" => "Dh", "4" => "Dh", "5" => "Dh", "6" => "Dh", "7" => "Dh", "8" => "Dh", "9" => "Dh", "10" => "Dh", "A" => "Dh"},
        "9" => {"2" => "H", "3" => "H", "4" => "S", "5" => "S", "6" => "S", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"},
        "10" => {"2" => "S", "3" => "S", "4" => "S", "5" => "S", "6" => "S", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"},
        "11" => {"2" => "S", "3" => "S", "4" => "S", "5" => "S", "6" => "S", "7" => "H", "8" => "H", "9" => "H", "10" => "H", "A" => "H"}}

card1 = ''
card2 = ''
dealer_card = ''

def validate(card)
  # VALIDATE USER ENTRY
  valid_set = ['1', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K', 'A']
  valid_set.include?(card)
end

def convert(card)
  # TAKES CURRENT CARD VALUE AND CONVERTS TO NUMBER VALUE AND RETURNS TO NEW VARIABLE FOR CALCULATIONS.
  if card == 'A'
    card = 11
  elsif card == 'K' || card == 'Q' || card == 'J'
    card = 10
  else
    card = card
  end
end

until validate(card1)
  puts "Please tell me your first card (Use J, Q, K or A for face cards)"
  card1 = gets.chomp
end

until validate(card2)
  puts "How about your second card? (Use J, Q, K or A for face cards)"
  card2 = gets.chomp
end

until validate(dealer_card)
  puts "And what's that evil dealer's card? (Use J, Q, K or A for face cards)"
  dealer_card = gets.chomp
end

con_card1 = convert(card1)
con_card2 = convert(card2)
con_dealer = convert(dealer_card)

puts con_card1.to_s + con_card2.to_s + con_dealer.to_s

def is_hard_soft_pair
  # COMPARES CARD VALUES TO DETERMINE WHICH HASH TO REFERENCE
  # TAKES card1 AND card2 AND RETURNS hard, soft or pair
end

def next_move
  # TAKES CONVERTED SUM OF card1 AND card2 and RAW dealer_card TO REFERENCE APPROPRIATE HASH AND RETURN VALUE.
  # IF REFERENCING pair ACE SHOULD BE THE CONVERTED VALUE OF 11
end

def output
  # USES next_move RESULT AND CONVERTS LETTER CODE TO ENGLISH AND PUTS RESULT TO SCREEN.
end
